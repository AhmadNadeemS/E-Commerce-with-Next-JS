datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id               String    @id @default(cuid())
    name             String?
    email            String?   @unique
    emailVerified    DateTime?
    image            String?
    accounts         Account[]
    sessions         Session[]
    stripeCustomerId String?
    order            Order[]
}

model Order {
    id              String    @id @default(cuid())
    user            User      @relation(fields: [userId], references: [id])
    userId          String
    amount          Float
    currency        String
    status          String
    createdDate     DateTime  @default(now())
    paymentIntentID String?   @unique
    products        Product[]
}

model Product {
    id          String  @id @default(cuid())
    orders      Order[]
    name        String
    description String?
    unit_amount Float
    quantity    Float   @default(0)
    image       String?
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
